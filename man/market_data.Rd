% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Market_Data.R
\name{market_data}
\alias{market_data}
\title{Get Market Data}
\usage{
market_data(
  symbol,
  v = 2,
  timeframe = "day",
  multiplier = 1,
  from = NULL,
  to = NULL,
  after = NULL,
  until = NULL,
  limit = NULL,
  full = FALSE,
  unadjusted = FALSE
)
}
\arguments{
\item{symbol}{\code{(character)} The stock or stocks (in vector format) for which data will be retrieved. Non case-sensitive.}

\item{v}{\code{(integer)} The API version number.
\itemize{
\item{\code{1}}{ the \code{v1} \href{https://alpaca.markets/docs/api-documentation/api-v2/market-data/#endpoint}{IEX/Alpaca API}: data.alpaca.markets/v1 will be used}
\item{\code{2}}{ the \code{v2} \href{https://alpaca.markets/docs/api-documentation/api-v2/market-data/alpaca-data-api-v2/}{Alpaca V2 API}: data.alpaca.markets/v2 endpoint will be used.}
\item{\code{"p"/"polygon"}}{ the \href{https://polygon.io/docs/#get_v2_aggs_ticker__ticker__range__multiplier___timespan___from___to__anchor}{Aggregates Endpoint}: api.polygon.io/v2/aggs will be used. }
}}

\item{timeframe}{\code{(character)} For the \code{v1} API, one of
\itemize{
\item{\code{'tr'/'lt'/'trade'/'last_trade'}}{ For the last trade price. See \href{https://alpaca.markets/docs/api-documentation/api-v2/market-data/last-trade/}{Last Trade}}
\item{\code{'qu'/'lq'/'quote'/'last_quote'}}{ For the last quote price. See \href{https://alpaca.markets/docs/api-documentation/api-v2/market-data/last-quote/}{Last Quote}}
\item{\code{'m'/'min'`/`'minute'}}{ (\code{multiplier} can be \code{1}/\code{5}/\code{15})}
\item{\code{'d'/'day'}}{ (\code{multiplier} will be \code{1})}
}
For the \code{v2} \href{https://alpaca.markets/docs/api-documentation/api-v2/market-data/alpaca-data-api-v2/}{IEX/SIP API} the following timeframes are supported:
\itemize{
\item{\code{'lt'/'last_trade'}}{ The Latest trade API provides the latest trade data for a given ticker symbol. See \href{https://alpaca.markets/docs/api-documentation/api-v2/market-data/alpaca-data-api-v2/historical/#latest-trade}{Latest Trades}}
\item{\code{'tr'/'trade'}}{ For historical trade data for a given ticker symbol on a specified date \emph{\code{from/to} required}. See \href{https://alpaca.markets/docs/api-documentation/api-v2/market-data/alpaca-data-api-v2/historical/#trades}{Trades}. \strong{WARNING} The server stores data by the nanosecond. Limit the time span requested otherwise this could take a very long time. For example: a request spanning two days had 68 pages and took ~ 3m to retrieve.}
\item{\code{'lq'/'last_quote'}}{The Latest quote API provides the latest quote data for a given ticker symbol. See \href{https://alpaca.markets/docs/api-documentation/api-v2/market-data/alpaca-data-api-v2/historical/#latest-quote}{Latest Quote}}
\item{\code{'qu'/'quote'}}{ The Quotes endpoint provides NBBO quotes for a given ticker symbol at a specified date \emph{\code{from/to} required}. See \href{https://alpaca.markets/docs/api-documentation/api-v2/market-data/alpaca-data-api-v2/historical/#quotes}{Quotes}, \strong{WARNING} The server stores data by the nanosecond. Limit the time span requested otherwise this could take a very long time. For example: a request spanning a single day (ie 5/26-5/27) can take ~ 3m to retrieve.}
\item{\code{"ss"/"snapshot"}}{ The Snapshot endpoint provides the latest trade, latest quote, minute bar daily bar and previous daily bar data for a symbol or a set of symbols. See \href{Snapshot - Multipler Tickers}{https://alpaca.markets/docs/api-documentation/api-v2/market-data/alpaca-data-api-v2/historical/#snapshot---multiple-tickers} & \href{Snapshot - Ticker}{https://alpaca.markets/docs/api-documentation/api-v2/market-data/alpaca-data-api-v2/historical/#snapshot---ticker}}
\item{\code{'m'}/\code{'min'}/\code{'minute'}}
\item{\code{'h'}/\code{'hour'}}
\item{\code{'d'}/\code{'day'}}
}
For the \code{"p"/"polygon"} API, \code{multiplier} can be any positive \code{integer} for any one of the following \code{timeframe}'s:
\itemize{
\item{\code{'m'}/\code{'min'}/\code{'minute'}}
\item{\code{'h'}/\code{'hour'}}
\item{\code{'d'}/\code{'day'}}
\item{\code{'w'}/\code{'week'}}
\item{\code{'M'}/\code{'mo'}/\code{'month'}}{ (\emph{Note} capitalize M for month)}
\item{\code{'q'}/\code{'quarter'}}
\item{\code{'y'}/\code{'year'}}
}}

\item{multiplier}{For the \code{v1} API, with \code{'minute'} \code{timeframe} one of \code{1}/\code{5}/\code{15}. Otherwise, defaults to \code{1}.
For the \code{v2} API, \code{multiplier} can only be \code{1}.
For the \code{"polygon"} API, this can be any positive \code{integer}. \strong{Default} \code{1}.}

\item{from}{(equivalent to \code{start} in \code{v1}) \code{(Date/POSIXlt/Datetime(POSIXct)/character)} See Details for formatting guidelines. Return data \emph{equal to or after} this time. Default is 7 days ago.}

\item{to}{(equivalent to \code{end} in \code{v1}) \code{(Date/POSIXlt/Datetime(POSIXct)/character)} See Details for formatting guidelines. Return data \emph{equal to or before} this time. Default is today's date.}

\item{after}{\emph{\code{v1} only} \code{(Date/POSIXlt/Datetime(POSIXct)/character)} See Details for formatting guidelines. Return data \emph{after} this time. Default is 7 days ago. \emph{Cannot be used with \code{to}}}

\item{until}{\emph{\code{v1} only} \code{(Date/POSIXlt/Datetime(POSIXct)/character)} See Details for formatting guidelines. Return data \emph{before} this time. Default is today's date. \emph{Cannot be used with \code{from}}}

\item{limit}{\emph{v1 & v2} \code{(integer)} The amount of bars to return per symbol. This can range from \code{1} to \code{1000} for \code{v1} and \code{1} to \code{10000} for \code{v2}. \strong{Default} 1000 (\code{v1}), 10000 (\code{v2}), 50000 (\code{p}).}

\item{full}{\code{(logical)} If TRUE, the function will attempt to return the entire expected dataset based on the range of dates provided and perform a data completeness check. If the requested from, to dates/times exceed that which can be returned in a single call, the API will be called repeatedly to return the \strong{full} dataset. If FALSE, the request will be submitted to the API as is. \emph{Note on rate limits:} The \code{v1} API has a call limit of 1000 bars and a rate limit of 200 requests per minute. If the rate limit is reached, queries will pause for 1 minute. The \code{polygon} API free tier has a call limit of 5 requests per minute, if the rate limit is reached, queries will pause for 1 minute. \strong{Default} FALSE.}

\item{unadjusted}{\emph{polygon only} \code{(logical)} Set to \code{TRUE} if the results should \strong{NOT} be adjusted for splits. \strong{Default} \code{FALSE}.}

\item{adjustment}{\emph{Deprecated} \code{(character)} Specifies the corporate action adjustment for the stocks. Possible values: 'raw', 'split', 'dividend' or 'all'. \strong{Default} \code{'raw'}.}
}
\value{
\code{tsymble} object if just one symbol is requested, otherwise a \verb{named list} of \code{tsymble} objects for each ticker symbol.
A \code{tsymble} is a \code{tsibble} object with the following columns:
\itemize{
\item{\code{time}}{ the time of the bar as \code{POSIXct} in yyyy-mm-dd for timeframe = day, and yyyy-mm-dd hh:mm:ss for timeframes < day}
\item{\code{open}}{ \code{(numeric)} open price}
\item{\code{high}}{ \code{(numeric)} high price}
\item{\code{low}}{ \code{(numeric)} low price}
\item{\code{close}}{ \code{(numeric)} close price}
\item{\code{volume}}{ \code{(numeric)} volume (in millions)}
\item{\code{vw *polygon only*}}{ \code{(numeric)} the volume weighted average price}
\item{\code{n *polygon only*}}{ \code{(numeric)} Number of items in aggregate window}
}
Each \code{tsymble} has a "query" attribute with the "query" data as a \code{list} for each of the calls required to return it and a "symbol" attribute with the ticker symbol for the data. These attributes are easily accessed via \code{get_query} and \code{get_sym} respectively.
}
\description{
The bars API provides time-aggregated price and volume data for a single stock or multiple. \strong{The \code{v2} (Polygon) API is only available for live accounts and accepts the \code{from}, \code{to}, \code{timeframe}, \code{multiplier}, and \code{unadjusted} arguments.}
}
\details{
All values to \code{from/after/to/until} will parse correctly if a numeric year, in \code{YYYY-MM-DD} \href{https://www.iso.org/iso-8601-date-and-time-format.html}{RFC 3339} format or \code{(Datetime/POSIXct)}, \verb{YYYY-MM-DD HH:MM} \href{https://www.iso.org/iso-8601-date-and-time-format.html}{ISO8601} format. Other formats will often work, but are not guaranteed to parse correctly. All Dates/Datetimes are forced to America/New York timezone (See \code{\link[lubridate]{force_tz}}) in which the NYSE operates. This means that if \code{\link[lubridate]{now}} is used to specify 3PM in the local timezone, it will be forced 3PM in the "America/New_York timezone. This eliminates needing to consistently account for timezone conversions when providing inputs. The \code{polygon} API only accepts Dates in YYYY-MM-DD format, any arguments passed to \code{start} or \code{end} will be coerced to Date automatically if using \code{polygon}. For the \code{polygon} API, queries with \code{timeframe}: \code{'year'} use \code{12/31} as an aggregate date for each year. Arguments passed to \code{from} & \code{to} will be coerced to their yearly \code{\link[lubridate]{round_date}} and \code{\link[lubridate]{ceiling_date}} respectively.
For a full overview of how the Polygon.io Aggregates endpoint behaves, check out \href{Aggregate Data API Improvements}{https://polygon.io/blog/aggs-api-updates/}.
}
\examples{
\dontrun{
# Getting data for the last week from the v1 API:
market_data(symbol = c("INTC","MSFT"), v = 1, from = Sys.Date() - lubridate::weeks(1))
# Getting price data with specific date ranges and timeframes with limit on the number of bars returned
market_data(symbol = c("INTC","MSFT"), from = "2019-03-20", to = "2019-04-01", multiplier = 15, timeframe = "min", limit = 175, v = 1)
# Get the last trade for a symbol (or multiple):
market_data("TWTR", timeframe = "lt")
# or the last quote for multiple symbols:
market_data(c("TWTR","AAPL","BYND"), timeframe = "lq")
}
}
\concept{Market-Data}
